4. INCONSISTÊNCIAS DE ARRAYS - CORRIGIDAS
4.1. Array Implementation PADRONIZADA
// ✅ CORRIGIDO - Arrays nativas PostgreSQL
export const projects = pgTable("projects", {
  teamMemberIds: uuid("team_member_ids").array().default([]),  // ✅ Native array
  tags: text("tags").array(),                                   // ✅ Native array
  // ...
});
export const projectActions = pgTable("project_actions", {
  responsibleIds: uuid("responsible_ids").array().default([]),          // ✅ Native array
  dependsOnActionIds: uuid("depends_on_action_ids").array().default([]), // ✅ Native array
  blockedByActionIds: uuid("blocked_by_action_ids").array().default([]), // ✅ Native array
  // ...
});
5. INCONSISTÊNCIAS DE TAMANHOS DE CAMPOS - PADRONIZADAS
5.1. Tamanhos de Campo PADRONIZADOS
// ✅ CORRIGIDO - Tamanhos padronizados
export const customers = pgTable("customers", {
  phone: varchar("phone", { length: 20 }),     // ✅ Padronizado para 20 chars
  // ...
});
export const favorecidos = pgTable("favorecidos", {
  phone: varchar("phone", { length: 20 }),     // ✅ Padronizado para 20 chars
  cellPhone: varchar("cell_phone", { length: 20 }), // ✅ Padronizado para 20 chars
  // ...
});
6. INCONSISTÊNCIAS DE AUDITORIA
6.1. Campo updatedAt Ausente - IDENTIFICADO
// ❌ AINDA PENDENTE - ticketMessages sem updatedAt
export const ticketMessages = pgTable("ticket_messages", {
  createdAt: timestamp("created_at").defaultNow(),
  // ❌ updatedAt AUSENTE - inconsistente com outras tabelas
});
7. INCONSISTÊNCIAS DE INDEXAÇÃO
7.1. Índices Críticos Ausentes - IDENTIFICADO
// ❌ AINDA PENDENTE - Faltam índices críticos
// Apenas sessions tem índice explícito:
export const sessions = pgTable(
  "sessions",
  { /* campos */ },
  (table) => [index("IDX_session_expire").on(table.expire)],
);
// ❌ FALTAM índices essenciais para:
// - customers: (tenant_id, email)
// - tickets: (tenant_id, status, priority)
// - favorecidos: (tenant_id, cpf)
8. INCONSISTÊNCIAS DE VALIDAÇÃO
8.1. Validação de Tabelas - IDENTIFICADO
// ❌ DISCREPÂNCIA DETECTADA - server/db.ts
const requiredTables = [
  'customers', 'tickets', 'ticket_messages', 'activity_logs', 'locations',
  'customer_companies', 'skills', 'certifications', 'user_skills', 
  'favorecidos', 'projects', 'project_actions'
]; // 12 tabelas validadas
// Mas schema-master.ts define mais tabelas não validadas:
// - sessions, tenants, users (public schema)
9. ERROS ATIVOS DE RUNTIME - CRÍTICOS
9.1. Console Logs de Erros
// ❌ ERROS ATIVOS DETECTADOS nos logs:
{"message":"Uncaught TypeError: users.map is not a function","type":"error"}
// Indica que queries retornam undefined em vez de arrays
"Erro ao buscar estatísticas:",{}
"Erro ao buscar projetos:",{}
"Erro ao obter localização:",{}
// Múltiplos endpoints falhando