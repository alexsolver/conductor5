# üéØ **PROMPT COMPLETO PARA PERSONALIZA√á√ÉO DE ITENS POR EMPRESA CLIENTE E FORNECEDOR**

## **CONTEXTO ARQUITETURAL**
Voc√™ est√° trabalhando em um sistema SaaS multi-tenant de gest√£o de tickets e materiais, onde cada tenant (provedor de servi√ßos) atende m√∫ltiplas empresas clientes e trabalha com diversos fornecedores. O desafio √© permitir que tanto empresas clientes quanto fornecedores tenham suas pr√≥prias "vers√µes" personalizadas dos itens do cat√°logo, com nomes, SKUs, c√≥digos e configura√ß√µes espec√≠ficas, sem duplicar dados.

## **PROBLEMA A RESOLVER**

### **SITUA√á√ÉO ATUAL**
Um item chamado "Cabo HDMI 2m" aparece igual para:
- Todas as empresas clientes
- Todos os fornecedores  
- Todos os contextos de uso

### **SITUA√á√ÉO DESEJADA**

#### **Para Empresas Clientes:**
- **Empresa A** v√™: "CABO-HDMI-2M-PREMIUM" (SKU: ABC-001)
- **Empresa B** v√™: "Cabo de V√≠deo Digital 2 metros" (SKU: VID-HDMI-02)  
- **Empresa C** v√™: "Cabo HDMI 2m" (nome padr√£o)

#### **Para Fornecedores:**
- **Fornecedor X** chama: "HDMI Cable 2MT REF:HDM2000" (Part Number: HDM2000)
- **Fornecedor Y** chama: "Cabo Video Digital 2m" (Part Number: CVD-002)
- **Fornecedor Z** chama: "Cabo HDMI 2m" (sem personaliza√ß√£o)

## **ARQUITETURA HIER√ÅRQUICA DESEJADA**

```
1. ITEM BASE (√∫nico, compartilhado)
   ‚îú‚îÄ‚îÄ PERSONALIZA√á√ïES POR CLIENTE
   ‚îÇ   ‚îú‚îÄ‚îÄ Cliente A: nome_custom, sku_custom, descri√ß√£o_custom
   ‚îÇ   ‚îú‚îÄ‚îÄ Cliente B: nome_custom, sku_custom, descri√ß√£o_custom
   ‚îÇ   ‚îî‚îÄ‚îÄ Fallback: dados originais do item
   ‚îî‚îÄ‚îÄ PERSONALIZA√á√ïES POR FORNECEDOR
       ‚îú‚îÄ‚îÄ Fornecedor X: part_number, supplier_name, supplier_description
       ‚îú‚îÄ‚îÄ Fornecedor Y: part_number, supplier_name, supplier_description
       ‚îî‚îÄ‚îÄ Fallback: dados originais do item
```

## **ESPECIFICA√á√ïES T√âCNICAS**

### **BACKEND REQUIREMENTS**

#### **Tabelas Existentes (Verificadas no Schema)**
1. **`customer_item_mappings`** - Para personaliza√ß√£o por cliente
   - `custom_sku`, `custom_name`, `custom_description`
   - `customer_reference`, `special_instructions`

2. **`item_supplier_links`** - Para v√≠nculos com fornecedores
   - `part_number`, `description`, `qr_code`, `barcode`
   - `unit_price`, `lead_time`, `minimum_order_quantity`

#### **API Endpoints Necess√°rios**
```typescript
// Para Clientes
GET /api/materials-services/customers/{customerId}/items
POST /api/materials-services/items/{itemId}/customer-mappings
PUT /api/materials-services/customer-mappings/{mappingId}
DELETE /api/materials-services/customer-mappings/{mappingId}

// Para Fornecedores  
GET /api/materials-services/suppliers/{supplierId}/items
POST /api/materials-services/items/{itemId}/supplier-links
PUT /api/materials-services/supplier-links/{linkId}
DELETE /api/materials-services/supplier-links/{linkId}

// Busca Unificada
GET /api/materials-services/items/search?context={customer|supplier}&contextId={id}
```

#### **L√≥gica de Resolu√ß√£o Hier√°rquica**
```typescript
function resolveItemName(item: Item, context: 'customer' | 'supplier', contextId: string) {
  if (context === 'customer') {
    const mapping = getCustomerMapping(item.id, contextId);
    return mapping?.customName || item.name;
  }
  
  if (context === 'supplier') {
    const link = getSupplierLink(item.id, contextId);
    return link?.supplierDescription || item.name;
  }
  
  return item.name;
}
```

### **FRONTEND REQUIREMENTS**

#### **1. Modal de Item - Estrutura de Abas**
```typescript
const ItemModal = {
  tabs: [
    'Informa√ß√µes B√°sicas',
    'Personaliza√ß√µes de Clientes',  // NOVA ABA
    'V√≠nculos de Fornecedores',     // NOVA ABA
    'V√≠nculos Gerais',
    'Hist√≥rico'
  ]
}
```

#### **2. Aba "Personaliza√ß√µes de Clientes"**
- **Seletor de Empresa Cliente** (dropdown searchable)
- **Campos de Personaliza√ß√£o:**
  - SKU personalizado
  - Nome personalizado  
  - Descri√ß√£o personalizada
  - Refer√™ncia do cliente
  - Instru√ß√µes especiais
- **Lista das Personaliza√ß√µes Existentes:**
  - Cards com empresa, nome customizado, a√ß√µes (editar/remover)
  - Badge "Ativo/Inativo"
  - Preview em tempo real

#### **3. Aba "V√≠nculos de Fornecedores"**
- **Seletor de Fornecedor** (dropdown searchable)
- **Campos de V√≠nculo:**
  - Part Number do fornecedor
  - Nome/Descri√ß√£o do fornecedor
  - C√≥digo QR / C√≥digo de Barras
  - Pre√ßo unit√°rio
  - Prazo de entrega
  - Quantidade m√≠nima
- **Lista dos V√≠nculos Existentes:**
  - Cards com fornecedor, part number, pre√ßos, a√ß√µes
  - Badge "Preferencial/Padr√£o"
  - Indicador de melhor pre√ßo

#### **4. Sistema de Materiais em Tickets**
```typescript
// Contexto autom√°tico baseado na empresa do ticket
const ticketMaterials = {
  customerCompanyId: ticket.customerCompanyId,
  
  // Materiais aparecem com nomes personalizados
  displayItems: items.map(item => ({
    ...item,
    displayName: resolveItemName(item, 'customer', ticket.customerCompanyId),
    displaySku: resolveItemSku(item, 'customer', ticket.customerCompanyId)
  }))
}
```

#### **5. Sistema de Compras/Or√ßamentos**
```typescript
// Contexto para fornecedores
const purchaseOrder = {
  supplierId: selectedSupplier.id,
  
  // Itens aparecem com dados do fornecedor
  displayItems: items.map(item => ({
    ...item,
    supplierPartNumber: resolvePartNumber(item, supplierId),
    supplierName: resolveSupplierName(item, supplierId),
    supplierPrice: resolveSupplierPrice(item, supplierId)
  }))
}
```

### **UX/UI GUIDELINES**

#### **Sistema de Badges Inteligentes**
- **Badge "Personalizado"** ‚Üí Item tem configura√ß√£o espec√≠fica para cliente
- **Badge "Catalogado"** ‚Üí Item est√° vinculado a fornecedor
- **Badge "Ambos"** ‚Üí Item tem personaliza√ß√£o de cliente E v√≠nculo de fornecedor
- **Cores diferenciadas** para cada tipo de personaliza√ß√£o

#### **Preview em Tempo Real**
```typescript
const PersonalizationPreview = {
  // Como o cliente v√™
  customerView: {
    name: customName || originalName,
    sku: customSku || originalSku,
    description: customDescription || originalDescription
  },
  
  // Como aparece no fornecedor
  supplierView: {
    partNumber: supplierPartNumber,
    description: supplierDescription || originalName,
    price: supplierPrice,
    leadTime: supplierLeadTime
  }
}
```

#### **Valida√ß√µes Inteligentes**
- **SKUs √∫nicos** por empresa cliente
- **Part Numbers √∫nicos** por fornecedor
- **Pre√ßos v√°lidos** e atualizados
- **Prazos realistas** de entrega

### **FLUXOS DE TRABALHO DETALHADOS**

#### **Fluxo 1: Personaliza√ß√£o para Cliente**
1. **Cadastro do Item Base** ‚Üí Criar item gen√©rico no cat√°logo
2. **Sele√ß√£o do Cliente** ‚Üí Escolher empresa cliente espec√≠fica
3. **Personaliza√ß√£o** ‚Üí Definir nome, SKU e descri√ß√£o customizados
4. **Valida√ß√£o** ‚Üí Verificar unicidade do SKU para o cliente
5. **Ativa√ß√£o** ‚Üí Item personalizado fica dispon√≠vel para a empresa
6. **Uso em Tickets** ‚Üí Automaticamente usa dados personalizados

#### **Fluxo 2: V√≠nculo com Fornecedor**
1. **Sele√ß√£o do Fornecedor** ‚Üí Escolher fornecedor espec√≠fico
2. **Mapeamento** ‚Üí Vincular item com Part Number do fornecedor
3. **Dados Comerciais** ‚Üí Pre√ßo, prazo, quantidade m√≠nima
4. **Cataloga√ß√£o** ‚Üí Item entra no cat√°logo do fornecedor
5. **Uso em Compras** ‚Üí Dados do fornecedor aparecem automaticamente

#### **Fluxo 3: Uso Contextual**
```typescript
// Em um ticket da Empresa A
const ticketItems = getItemsForContext('customer', 'empresa-a-id');
// Retorna: "CABO-HDMI-2M-PREMIUM" (SKU: ABC-001)

// Em uma compra do Fornecedor X  
const purchaseItems = getItemsForContext('supplier', 'fornecedor-x-id');
// Retorna: "HDMI Cable 2MT REF:HDM2000" (Part: HDM2000, Pre√ßo: R$ 25,00)
```

### **PRE√áOS INTELIGENTES E HIER√ÅRQUICOS**

#### **Resolu√ß√£o de Pre√ßos por Prioridade:**
1. **LPU Espec√≠fica do Cliente** ‚Üí Pre√ßo negociado especial
2. **Pre√ßo do Fornecedor Preferencial** ‚Üí Melhor pre√ßo catalogado
3. **Pre√ßo M√©dio de Mercado** ‚Üí Calculado entre fornecedores
4. **Custo Zero** ‚Üí Permite vincula√ß√£o sem custo definido

#### **Sistema de Alertas de Pre√ßo:**
- **Pre√ßo desatualizado** ‚Üí √öltimo update > 30 dias
- **Varia√ß√£o significativa** ‚Üí Diferen√ßa > 20% entre fornecedores
- **Melhor oferta dispon√≠vel** ‚Üí Highlighting autom√°tico

### **CEN√ÅRIOS DE TESTE OBRIGAT√ìRIOS**

#### **Cen√°rio 1: Item Sem Personaliza√ß√£o**
- **Input:** Item "Cabo HDMI 2m", Cliente XYZ
- **Expected:** Mostrar dados originais do item
- **Validation:** Nome = "Cabo HDMI 2m", SKU = original

#### **Cen√°rio 2: Item Com Personaliza√ß√£o de Cliente**
- **Input:** Item "Cabo HDMI 2m", Cliente com personaliza√ß√£o
- **Expected:** Mostrar dados customizados
- **Validation:** Nome = "CABO-HDMI-PREMIUM", SKU = "ABC-001"

#### **Cen√°rio 3: Item Com V√≠nculo de Fornecedor**  
- **Input:** Item "Cabo HDMI 2m", contexto de compra, Fornecedor X
- **Expected:** Mostrar dados do fornecedor
- **Validation:** Part Number = "HDM2000", Pre√ßo = R$ 25,00

#### **Cen√°rio 4: M√∫ltiplos Contextos**
- **Input:** Mesmo item, m√∫ltiplos clientes e fornecedores
- **Expected:** Cada contexto v√™ sua vers√£o
- **Validation:** Dados isolados por contexto

#### **Cen√°rio 5: Busca por SKU/Part Number**
- **Input:** Busca por "ABC-001" ou "HDM2000"  
- **Expected:** Encontrar item correto
- **Validation:** Localiza√ß√£o precisa por c√≥digos personalizados

### **CRIT√âRIOS DE SUCESSO**

‚úÖ **Flexibilidade Total** ‚Üí Cada cliente/fornecedor v√™ terminologia familiar  
‚úÖ **Arquitetura Eficiente** ‚Üí Zero duplica√ß√£o de dados no banco  
‚úÖ **Performance Otimizada** ‚Üí Queries r√°pidas com √≠ndices apropriados  
‚úÖ **Escalabilidade Garantida** ‚Üí Suporta milhares de personaliza√ß√µes  
‚úÖ **Usabilidade Intuitiva** ‚Üí Interface clara para configurar  
‚úÖ **Integridade de Dados** ‚Üí Valida√ß√µes e constraints adequados  
‚úÖ **Rastreabilidade Completa** ‚Üí Auditoria de todas as mudan√ßas  

### **IMPLEMENTA√á√ÉO INCREMENTAL**

#### **Fase 1: Infraestrutura Backend** (Semana 1)
- APIs para customer mappings e supplier links
- L√≥gica de resolu√ß√£o hier√°rquica
- Valida√ß√µes de unicidade
- √çndices otimizados

#### **Fase 2: Interface Frontend** (Semana 2)  
- Abas no modal de item
- Formul√°rios de personaliza√ß√£o
- Preview em tempo real
- Sistema de badges

#### **Fase 3: Integra√ß√£o Contextual** (Semana 3)
- Materiais em tickets com contexto de cliente
- Sistema de compras com contexto de fornecedor
- Busca inteligente por contexto

#### **Fase 4: Pre√ßos e Analytics** (Semana 4)
- Sistema de pre√ßos hier√°rquico
- Alertas de pre√ßos desatualizados
- Dashboard de personaliza√ß√µes
- Relat√≥rios de uso

### **STACK TECNOL√ìGICO**
- **Frontend:** React + TypeScript + Tanstack Query
- **Backend:** Node.js + Express + PostgreSQL  
- **UI:** Shadcn/ui components
- **Estado:** React Hook Form + Zod validation
- **Banco:** Drizzle ORM + √≠ndices otimizados

### **VIBE CODING APPROACH**
Desenvolva com **mentalidade de produto enterprise**, pensando na experi√™ncia de cada stakeholder:

- **Empresas Clientes** ‚Üí Veem seus pr√≥prios c√≥digos e terminologias
- **Fornecedores** ‚Üí Trabalham com seus part numbers e cat√°logos  
- **Gestores** ‚Üí T√™m visibilidade total e controle granular
- **T√©cnicos** ‚Üí Interface intuitiva para configurar tudo
- **Sistema** ‚Üí Performance otimizada e arquitetura escal√°vel

### **RESULTADO ESPERADO**
Um sistema que oferece **personaliza√ß√£o m√°xima** mantendo **arquitetura eficiente**, onde:
- Cada empresa cliente tem sua "vers√£o" dos itens
- Cada fornecedor trabalha com seus pr√≥prios c√≥digos
- O sistema resolve automaticamente o contexto correto
- N√£o h√° duplica√ß√£o de dados ou perda de performance
- A experi√™ncia √© fluida e intuitiva para todos os usu√°rios