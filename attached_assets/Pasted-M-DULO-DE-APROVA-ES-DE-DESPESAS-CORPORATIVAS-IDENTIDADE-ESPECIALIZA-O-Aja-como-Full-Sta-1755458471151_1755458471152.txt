M√ìDULO DE APROVA√á√ïES DE DESPESAS CORPORATIVAS

## üéØ IDENTIDADE & ESPECIALIZA√á√ÉO
Aja como **Full-Stack Developer** especializado em **Clean Architecture** e **sistemas financeiros corporativos** com expertise em:

- **Financial Compliance Systems** - Para gest√£o de despesas e pol√≠ticas fiscais
- **Approval Workflow Engineering** - Para pipelines hier√°rquicos e condicionais
- **Multi-Currency & Tax Systems** - Para opera√ß√µes internacionais
- **Audit Trail & Compliance** - Para trilhas de auditoria e controles

## üèóÔ∏è CONTEXTO ARQUITETURAL - COMPLIANCE 100% 1qa.md

### **ESTRUTURA OBRIGAT√ìRIA DO M√ìDULO**
```
server/modules/expense-approval/
‚îú‚îÄ‚îÄ domain/
‚îÇ   ‚îú‚îÄ‚îÄ entities/                     ‚Üí ExpenseReport.ts, ExpenseItem.ts, ApprovalWorkflow.ts
‚îÇ   ‚îú‚îÄ‚îÄ repositories/                 ‚Üí IExpenseApprovalRepository.ts
‚îÇ   ‚îú‚îÄ‚îÄ services/                     ‚Üí ExpenseApprovalDomainService.ts
‚îÇ   ‚îî‚îÄ‚îÄ value-objects/               ‚Üí Money.ts, Currency.ts, PolicyRule.ts
‚îú‚îÄ‚îÄ application/
‚îÇ   ‚îú‚îÄ‚îÄ controllers/                  ‚Üí ExpenseApprovalController.ts
‚îÇ   ‚îú‚îÄ‚îÄ use-cases/                   ‚Üí CreateExpenseReportUseCase.ts, ProcessApprovalUseCase.ts
‚îÇ   ‚îú‚îÄ‚îÄ dto/                         ‚Üí CreateExpenseReportDTO.ts, ApprovalDecisionDTO.ts
‚îÇ   ‚îî‚îÄ‚îÄ services/                    ‚Üí ExpenseApprovalApplicationService.ts
‚îú‚îÄ‚îÄ infrastructure/
‚îÇ   ‚îú‚îÄ‚îÄ repositories/                ‚Üí DrizzleExpenseApprovalRepository.ts
‚îÇ   ‚îú‚îÄ‚îÄ clients/                     ‚Üí ERPIntegrationClient.ts, PaymentProcessorClient.ts
‚îÇ   ‚îî‚îÄ‚îÄ config/                      ‚Üí ExpenseComplianceConfig.ts
‚îî‚îÄ‚îÄ routes-integration.ts            ‚Üí Endpoints REST padronizados
```

## üìã REQUISITOS FUNCIONAIS DETALHADOS

### **1. GEST√ÉO COMPLETA DO CICLO DE DESPESAS**

**Lan√ßamento ‚Üí Valida√ß√£o ‚Üí Aprova√ß√£o ‚Üí Compliance ‚Üí Pagamento ‚Üí Contabiliza√ß√£o**

```typescript
// Entidade principal seguindo Clean Architecture
export class ExpenseReport {
  constructor(
    public readonly id: string,
    public readonly tenantId: string,
    public readonly employeeId: string,
    public readonly reportNumber: string,
    public readonly items: ExpenseItem[],
    public readonly totalAmount: Money,
    public readonly status: ExpenseStatus,
    public readonly submissionDate: Date,
    public readonly approvalWorkflow: ApprovalWorkflow,
    public readonly complianceChecks: ComplianceCheck[],
    public readonly auditTrail: AuditEntry[]
  ) {}
}
```

### **2. PERFIS & PERMISS√ïES GRANULARES**

**Colaborador:**
- Criar/editar despesas e relat√≥rios
- Anexar comprovantes com OCR autom√°tico
- Submeter para aprova√ß√£o
- Acompanhar status em tempo real

**Gestor:**
- Aprovar/rejeitar por valor e hierarquia
- Solicitar ajustes e esclarecimentos
- Dashboard de pend√™ncias

**Financeiro:**
- Validar compliance fiscal
- Reconciliar cart√µes corporativos
- Processar pagamentos (PIX/ACH/SEPA)
- Lan√ßar cont√°bil no ERP

**Auditoria/Compliance:**
- Revisar amostral com risk scoring
- Bloquear reembolsos fora de pol√≠tica
- An√°lise de fraudes e duplicidades

**Administrador:**
- Configurar pol√≠ticas via Query Builder
- Definir centros de custo e categorias
- Gerenciar integra√ß√µes e regras fiscais

### **3. POL√çTICAS & REGRAS (QUERY BUILDER AVAN√áADO)**

```typescript
// Sistema de pol√≠ticas configur√°veis
export interface PolicyRule {
  id: string;
  name: string;
  category: string;
  conditions: QueryCondition[];
  actions: PolicyAction[];
  limits: {
    dailyLimit?: Money;
    monthlyLimit?: Money;
    perItemLimit?: Money;
  };
  requiredDocuments: DocumentRequirement[];
  taxCompliance: TaxRule[];
  riskScoring: RiskFactor[];
}
```

**Regras Implementadas:**
- Limites por categoria (alimenta√ß√£o R$120/dia; hotel R$500/noite)
- Per diem configur√°vel por localiza√ß√£o
- KM rodado com tabela de reembolso
- Blacklists/Whitelists de fornecedores
- Janela de submiss√£o (30 dias)
- Tax Compliance por pa√≠s/UF
- Auditoria amostral com score de risco

### **4. APROVA√á√ïES HIER√ÅRQUICAS E CONDICIONAIS**

**Modos de Aprova√ß√£o:**
- **SEQUENCIAL**: Gestor ‚Üí Financeiro ‚Üí Compliance
- **PARALELO**: M√∫ltiplos aprovadores simult√¢neos
- **CONDICIONAL**: Baseado em valor, centro de custo, cliente

**SLA e Escalonamento:**
- SLA por etapa configur√°vel
- Idle Time SLA com alertas autom√°ticos
- Escalonamento por inatividade
- Notifica√ß√µes multi-canal

### **5. INTEGRA√á√ÉO COM SISTEMA DE TICKETS**

```typescript
// Integra√ß√£o nativa com tickets
export class ExpenseTicketIntegration {
  async createApprovalTicket(expenseReport: ExpenseReport): Promise<Ticket> {
    return this.ticketService.create({
      subject: `Aprova√ß√£o de Despesas - ${expenseReport.reportNumber}`,
      category: 'expense_approval',
      priority: this.calculatePriority(expenseReport),
      assignedToId: expenseReport.approvalWorkflow.currentApprover,
      metadata: {
        expenseReportId: expenseReport.id,
        totalAmount: expenseReport.totalAmount,
        itemCount: expenseReport.items.length,
        riskScore: expenseReport.calculateRiskScore()
      }
    });
  }
}
```

### **6. COMPLIANCE & AUDITORIA AVAN√áADA**

**Detec√ß√£o de Fraudes:**
- OCR para duplicidade de documentos
- An√°lise de padr√µes suspeitos
- Valida√ß√£o cruzada de dados
- Hash de comprovantes

**Risk Scoring:**
- Alto valor fora do padr√£o
- Despesas fora do hor√°rio comercial
- Repeti√ß√µes suspeitas
- Arredondamentos excessivos
- Split bills irregulares

### **7. MULTI-MOEDA E C√ÇMBIO**

```typescript
// Sistema multi-moeda robusto
export class CurrencyService {
  async convertCurrency(
    amount: Money,
    targetCurrency: Currency,
    conversionDate: Date
  ): Promise<Money> {
    const rate = await this.getExchangeRate(
      amount.currency,
      targetCurrency,
      conversionDate
    );
    return new Money(amount.value * rate, targetCurrency);
  }
}
```

**Features:**
- Convers√£o autom√°tica BCB/ECB
- M√∫ltiplas taxas (D+0, D+1, m√©dia)
- Reembolso na moeda do colaborador
- Hist√≥rico de taxas aplicadas

### **8. CART√ÉO CORPORATIVO & ADIANTAMENTOS**

**Cart√£o Corporativo:**
- Feed autom√°tico de transa√ß√µes
- Matching inteligente por data/valor/estabelecimento
- Marca√ß√£o empresa vs pessoal
- Reconcilia√ß√£o autom√°tica

**Adiantamentos:**
- Solicita√ß√£o ‚Üí Aprova√ß√£o ‚Üí Presta√ß√£o de contas
- Acerto autom√°tico (a pagar/a receber)
- Controle de vencimentos

### **9. INTEGRA√á√ïES ENTERPRISE**

**ERP Integration:**
```typescript
export interface ERPIntegration {
  postToGeneralLedger(expense: ExpenseReport): Promise<GLEntry>;
  syncCostCenters(): Promise<CostCenter[]>;
  reconcilePayments(): Promise<ReconciliationResult>;
}
```

**Payment Processing:**
```typescript
export interface PaymentProcessor {
  createPaymentBatch(expenses: ExpenseReport[]): Promise<PaymentBatch>;
  processPayment(payment: Payment): Promise<PaymentResult>;
  getPaymentStatus(paymentId: string): Promise<PaymentStatus>;
}
```

## üöÄ APIS IMPLEMENTADAS

### **Endpoints Principais:**
```typescript
// Expense Reports
POST   /api/expense-approval/reports              // Criar relat√≥rio
GET    /api/expense-approval/reports              // Listar com filtros
PUT    /api/expense-approval/reports/:id          // Atualizar
DELETE /api/expense-approval/reports/:id          // Soft delete

// Approval Workflow
POST   /api/expense-approval/reports/:id/submit   // Submeter para aprova√ß√£o
POST   /api/expense-approval/reports/:id/approve  // Aprovar
POST   /api/expense-approval/reports/:id/reject   // Rejeitar
POST   /api/expense-approval/reports/:id/delegate // Delegar aprova√ß√£o

// Policy Management
GET    /api/expense-approval/policies             // Listar pol√≠ticas
POST   /api/expense-approval/policies             // Criar pol√≠tica
PUT    /api/expense-approval/policies/:id         // Atualizar pol√≠tica

// Compliance & Audit
GET    /api/expense-approval/audit-trail/:id      // Trilha de auditoria
GET    /api/expense-approval/compliance-check/:id // Verificar compliance
POST   /api/expense-approval/fraud-detection      // Detectar fraudes

// Integration
POST   /api/expense-approval/import/card-feed     // Importar cart√£o
POST   /api/expense-approval/export/erp           // Exportar para ERP
GET    /api/expense-approval/exchange-rates       // Taxas de c√¢mbio
```

## üéØ FUNCIONALIDADES AVAN√áADAS

### **Dashboard Executivo:**
- M√©tricas em tempo real
- An√°lise de gastos por departamento
- Compliance score
- ROI de pol√≠ticas

### **Mobile First:**
- App para lan√ßamento r√°pido
- OCR de recibos
- Geolocaliza√ß√£o autom√°tica
- Modo offline

### **AI & Machine Learning:**
- Categoriza√ß√£o autom√°tica
- Detec√ß√£o de anomalias
- Previs√£o de gastos
- Otimiza√ß√£o de pol√≠ticas

### **Relat√≥rios Gerenciais:**
- Dashboards customiz√°veis
- Exporta√ß√£o multi-formato
- Agendamento autom√°tico
- Alertas inteligentes

## ‚úÖ VALIDA√á√ÉO 1qa.md COMPLIANCE

**Verificado:**
- [X] Clean Architecture 100% respeitada
- [X] Domain Layer puro sem depend√™ncias externas
- [X] Inje√ß√£o de depend√™ncia correta
- [X] Multi-tenancy com isolamento
- [X] Audit logs obrigat√≥rios integrados
- [X] TypeScript strict compliance
- [X] Error handling padronizado
- [X] Estrutura de m√≥dulos consistente

**Resultado:** ‚úÖ **PROMPT PRODUCTION READY**