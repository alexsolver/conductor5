üéØ objetivo

orquestrar manuten√ß√£o preventiva, corretiva e preditiva em ativos e locais, com planos, ordens de servi√ßo (OS), checklists, calend√°rios/turnos, aloca√ß√£o de equipes, SLA/tempo ocioso, aprova√ß√µes, pe√ßas/estoque e app m√≥vel com offline.

‚∏ª

üîÅ fluxos principais
	1.	cat√°logo de ativos & locais
	‚Ä¢	hierarquia (site > pr√©dio > √°rea > linha > m√°quina > componente)
	‚Ä¢	medidores/hor√≠metros, criticidade, MTBF/MTTR, c√≥digos de falha
	2.	planos de manuten√ß√£o (PM)
	‚Ä¢	preventivas por tempo (dias, semanas, meses), por uso (contador), ou condi√ß√£o (sensor/inspe√ß√£o)
	‚Ä¢	planos‚Üítarefas‚Üíchecklists com padr√µes, torque, bin√°rios, anexos e EPIs/permits
	3.	gera√ß√£o de OS
	‚Ä¢	por PM, por avaria (chamado), por condi√ß√£o (IoT/an√°lise), ou manual
	‚Ä¢	aplica SLA (resposta/resolu√ß√£o) e Idle Time SLA (parado sem a√ß√£o)
	4.	programa√ß√£o & aloca√ß√£o
	‚Ä¢	motor de scheduling (ver abaixo): habilidades, certifica√ß√µes, turnos, rotas, proximidade e prioridade/SLA
	‚Ä¢	modos: autom√°tico (otimizado), assistido (sugest√µes), manual (drag & drop)
	5.	execu√ß√£o (campo ou oficina)
	‚Ä¢	app m√≥vel (offline-first), ordem r√≠gida/flex√≠vel de tarefas, autosave por etapa,
valida√ß√µes de depend√™ncia (intertravamentos), fotos, medi√ß√µes, assinatura do cliente
	6.	fechamento & custos
	‚Ä¢	tempo (timesheets), pe√ßas/servi√ßos, aprova√ß√µes, laudo, c√≥digos de falha, retorno ao estoque, notas fiscais
	7.	an√°lise & melhoria
	‚Ä¢	indicadores: cumprimento de PM, backlog, SLA, tempo ocioso, MTBF/MTTR, custo por ativo, Pareto de falhas

‚∏ª

üß† motor de scheduling (programa√ß√£o)
	‚Ä¢	inputs: OS com prioridade/SLA, janelas do local, turnos/escala (ex.: 3x1, 5x2, 12x36), habilidades/certifica√ß√µes, carga atual, dist√¢ncia/rota, depend√™ncias
	‚Ä¢	regras:
	‚Ä¢	hard: certifica√ß√£o obrigat√≥ria, janela do cliente/local, bloqueios de seguran√ßa
	‚Ä¢	soft: proximidade, balanceamento de carga, prefer√™ncias de t√©cnico/cliente
	‚Ä¢	algoritmo: ‚Äúscore‚Äù multi-crit√©rio + busca local (greedy + melhoria) com reotimiza√ß√£o quando h√° faltas/atrasos
	‚Ä¢	sa√≠das: agenda (Gantt/Calend√°rio), rotas consolidadas (integra com seu m√≥dulo Aria), ETA e notifica√ß√µes
	‚Ä¢	SLA & idle: alerta antecipado, replanejamento autom√°tico, escalonamento

‚∏ª

üìê modelo de dados (m√≠nimo)

assets(id, location_id, tag, model, criticality, meters_json, ‚Ä¶)
locations(id, timezone, business_hours, holidays)
maintenance_plans(id, trigger_type: time|meter|condition, frequency_json, tasks_template_json)
work_orders(id, asset_id, origin: pm|incident|manual|condition, priority, status, sla_target_at, idle_policy, ‚Ä¶)
wo_tasks(id, wo_id, seq, required_skill, required_cert, checklist_json, status)
schedules(id, wo_id, technician_id, start, end, route_seq)
shifts(id, pattern: 3x1|5x2|12x36, calendar)
technicians(id, skills_json, certs_json, shift_id, home_base_location)
time_entries(id, wo_id, tech_id, start, end, type: travel|work|wait)
parts_reservations(id, wo_id, part_id, qty, status)
inventory_tx(id, part_id, qty, from_loc, to_loc, wo_id)
approvals(instances/steps/approvers ‚Äì reutiliza motor de aprova√ß√µes)
sla_policies(id, scope, start/pause/stop_conditions, calendars)
risk_permits(id, wo_id, type: LOTO|altura|NR10|NR35, status)
audit_logs(tenant_id, user_id, action_type, snapshots, created_at)

refor√ßa requisitos pr√©vios do Conductor: SLA por local e feriados (itens #70‚Äì71), auditoria (#49).

‚∏ª

‚öôÔ∏è regras & automa√ß√µes
	‚Ä¢	query builder em tickets/OS (condi√ß√µes para PM, aprova√ß√µes, escalonamento)
	‚Ä¢	pausas de SLA: aguardando cliente/pe√ßa/janela
	‚Ä¢	Idle Time SLA por etapa/tarefa (ex.: sem atualiza√ß√£o por 4h ‚áí lembrete ‚áí 8h ‚áí reatribuir)
	‚Ä¢	aprova√ß√£o: bloqueios por risco, custo, parada de linha; cliente pode aprovar
	‚Ä¢	pe√ßas: reserva autom√°tica por BOM do plano; substitutos/equival√™ncias
	‚Ä¢	seguran√ßa: permits (LOTO, NR10/NR35) e listas de EPI obrigat√≥rias

‚∏ª

üñ•Ô∏è ui (principal)
	‚Ä¢	Planejamento: Calend√°rio (dia/semana) + Gantt + mapa (clusters); drag & drop; conflitos e sobreposi√ß√µes
	‚Ä¢	Backlog: Kanban por status/criticidade; sugest√µes do motor
	‚Ä¢	Execu√ß√£o (m√≥vel): passo a passo, checklist com valida√ß√£o, fotos, medi√ß√£o, assinatura
	‚Ä¢	Pe√ßas & Estoque: reserva/baixa, alternativas, n√≠vel m√≠nimo
	‚Ä¢	Relat√≥rios: SLA, idle, MTTR/MTBF, Pareto, efic√°cia de PM, custo por ativo
	‚Ä¢	Configura√ß√µes: planos, turnos/escalas, skills/certs, pol√≠ticas de SLA/idle, query builder

‚∏ª

üîå api (exemplos)

POST /api/maintenance-plans ‚Äì cria plano (tempo/medidor)
POST /api/work-orders ‚Äì cria OS (com origem e SLA)
POST /api/work-orders/{id}/schedule ‚Äì atribui/agenda (auto/assistido)
POST /api/work-orders/{id}/start|pause|complete ‚Äì execu√ß√£o de OS
POST /api/work-orders/{id}/tasks/{taskId}/checklist ‚Äì marca itens, anexa evid√™ncias
POST /api/work-orders/{id}/approve ‚Äì integra motor de aprova√ß√µes
GET /api/schedule?from=&to=&tech= ‚Äì agenda consolidada
POST /api/parts/reserve ‚Äì reserva de pe√ßa para OS
GET /api/kpis/maintenance ‚Äì m√©tricas (SLA, idle, MTTR, backlog)

‚∏ª

üß≠ m√°quinas de estado

OS: drafted ‚Üí scheduled ‚Üí in_progress ‚Üí waiting(parts|window|client) ‚Üí completed ‚Üí approved ‚Üí closed
‚Üí rejected / canceled (ramifica√ß√µes)
tarefa: pending ‚Üí doing ‚Üí blocked ‚Üí done ‚Üí verified

‚∏ª

üîí qualidade & compliance
	‚Ä¢	Clean Architecture (Domain/Application/Infrastructure)
	‚Ä¢	Testes unit√°rios/integra√ß√£o (‚â• 80%)
	‚Ä¢	Acessibilidade WCAG 2.1 AA nas telas
	‚Ä¢	Observabilidade: m√©tricas (aging, cumprimento de PM), logs estruturados, tracing
	‚Ä¢	Auditoria completa (cada transi√ß√£o + payload)