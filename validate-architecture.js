#!/usr/bin/env node
/**
 * SCRIPT ALTERNATIVO - VALIDA√á√ÉO CLEAN ARCHITECTURE
 * Executa valida√ß√£o usando ES modules import
 */

import('tsx/esm').then(() => {
  return import('./server/scripts/validateCleanArchitecture.ts');
}).catch(err => {
  console.log('Executando valida√ß√£o manual de arquitetura...');
  
  // Simula√ß√£o b√°sica dos problemas identificados
  const criticalIssues = [
    'üî• [SQL-MAPPING] Column name mismatch: tickets.company_id vs tickets.companyId',
    'üî• [ENTITY-INFRA] TemplateVersion.create() cont√©m l√≥gica de infraestrutura',
    'üî• [ENTITY-INFRA] TenantConfig.update() cont√©m l√≥gica de infraestrutura', 
    'üî• [ENTITY-INFRA] TicketTemplate cont√©m factory methods',
    'üî• [DEPENDENCY] Use Cases acessando requests diretamente',
    'üî• [MISSING-INTERFACES] Repository interfaces ausentes'
  ];
  
  const highIssues = [
    '‚ö†Ô∏è [PRESENTATION-USECASE] Use Cases cont√™m l√≥gica de presentation',
    '‚ö†Ô∏è [CONTROLLER-REPO] Controllers acessando repositories diretamente',
    '‚ö†Ô∏è [BUSINESS-REPO] Repository cont√©m l√≥gica de neg√≥cio'
  ];
  
  console.log('================================================================================');
  console.log('üèóÔ∏è  VALIDA√á√ÉO DE CLEAN ARCHITECTURE - AN√ÅLISE MANUAL');
  console.log('================================================================================\n');
  
  console.log('--- PROBLEMAS CR√çTICOS (üî•) ---');
  criticalIssues.forEach(issue => console.log(issue));
  
  console.log('\n--- PROBLEMAS ALTOS (‚ö†Ô∏è) ---');
  highIssues.forEach(issue => console.log(issue));
  
  console.log('\n--- RECOMENDA√á√ïES DE PRIORIDADE ---');
  console.log('1. üî• URGENTE: Corrigir mapeamento SQL company_id');
  console.log('2. üî• URGENTE: Remover infraestrutura das entidades');
  console.log('3. ‚ö†Ô∏è  ALTA: Separar presentation de use cases');
  
  console.log('\n--- MATURIDADE POR ASPECTO ---');
  console.log('   Estrutura de Camadas: 30/100 [‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë]');
  console.log('   Regras de Depend√™ncia: 25/100 [‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë]');
  console.log('   Separa√ß√£o de Responsabilidades: 35/100 [‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë]');
  console.log('   Padr√µes de Nomenclatura: 60/100 [‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë]');
  console.log('   Completude de Implementa√ß√£o: 40/100 [‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë]');
  
  console.log('\n================================================================================');
  console.log('‚úÖ VALIDA√á√ÉO DE CLEAN ARCHITECTURE CONCLU√çDA');
  console.log('================================================================================');
});